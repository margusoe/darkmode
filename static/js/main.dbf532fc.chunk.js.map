{"version":3,"sources":["themes.js","CustomCursor/Cursor.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","body","fontColor","fontSize","fontFamily","backgroundColor","fontColorButton","iconColor","darkTheme","GlobalStyle","createGlobalStyle","props","theme","Cursor","cursorRef","React","useRef","useEffect","document","addEventListener","event","clientX","clientY","mouseX","current","clientWidth","mouseY","clientHeight","style","transform","className","ref","StyledApp","styled","div","App","useState","setTheme","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NAEaA,EAAa,CACxBC,KAAM,MACNC,UAAW,OACXC,SAAU,OACVC,WAAY,uBACZC,gBAAiB,OACjBC,gBAAiB,OACjBC,UAAW,UAGAC,EAAY,CACvBP,KAAM,OACNC,UAAW,OACXC,SAAU,OACVC,WAAY,uBACZC,gBAAiB,OACjBC,gBAAiB,OACjBC,UAAW,QAGAE,EAAcC,YAAH,8EAEI,SAACC,GAAD,OAAWA,EAAMC,MAAMX,Q,eCrBtCY,EAAS,WACpB,IAAMC,EAAYC,IAAMC,OAAO,MAU/B,OARAD,IAAME,WAAU,WACdC,SAASC,iBAAiB,aAAa,SAACC,GAAW,IACzCC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACXC,EAASF,EAAUP,EAAUU,QAAQC,YAAc,EACnDC,EAASJ,EAAUR,EAAUU,QAAQG,aAAe,EAC1Db,EAAUU,QAAQI,MAAMC,UAAxB,sBAAmDN,EAAnD,eAAgEG,EAAhE,gBAGG,qBAAKI,UAAU,aAAaC,IAAKjB,KCTpCkB,EAAYC,IAAOC,IAAV,0kBAQJ,SAACvB,GAAD,OAAWA,EAAMC,MAAMV,aACnB,SAACS,GAAD,OAAWA,EAAMC,MAAMT,YACrB,SAACQ,GAAD,OAAWA,EAAMC,MAAMR,cAarB,SAACO,GAAD,OAAWA,EAAMC,MAAMR,cAClB,SAACO,GAAD,OAAWA,EAAMC,MAAMP,mBAClC,SAACM,GAAD,OAAWA,EAAMC,MAAMN,mBAIvB,SAACK,GAAD,OAAWA,EAAMC,MAAML,aA4BrB4B,MAxBf,WAAgB,IAAD,EACaC,mBAAS,SADtB,mBACNxB,EADM,KACCyB,EADD,KAOb,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAezB,MAAiB,UAAVA,EAAoBZ,EAAaQ,EAAvD,UACE,cAACC,EAAD,IACA,eAACuB,EAAD,WACE,mBAAGF,UAAqB,UAAVlB,EAAoB,cAAgB,iBADpD,mCAGE,wBAAQ0B,QAAS,WAXHD,EAAV,UAAVzB,EAA6B,OAAmB,UAW1C,SACa,UAAVA,EAAoB,QAAU,mBC1C5B2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAE1BZ,M","file":"static/js/main.dbf532fc.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n  body: \"fff\",\r\n  fontColor: \"#000\",\r\n  fontSize: \"24px\",\r\n  fontFamily: \"'New Tegomin', serif\",\r\n  backgroundColor: \"#333\",\r\n  fontColorButton: \"#fff\",\r\n  iconColor: \"orange\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#333\",\r\n  fontColor: \"#fff\",\r\n  fontSize: \"44px\",\r\n  fontFamily: \"'New Tegomin', serif\",\r\n  backgroundColor: \"#fff\",\r\n  fontColorButton: \"#333\",\r\n  iconColor: \"#fff\",\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background-color: ${(props) => props.theme.body}\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Cursor = () => {\r\n  const cursorRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"mousemove\", (event) => {\r\n      const { clientX, clientY } = event;\r\n      const mouseX = clientX - cursorRef.current.clientWidth / 2;\r\n      const mouseY = clientY - cursorRef.current.clientHeight / 2;\r\n      cursorRef.current.style.transform = `translate3d(${mouseX}px, ${mouseY}px, 0)`;\r\n    });\r\n  });\r\n  return <div className=\"app-cursor\" ref={cursorRef} />;\r\n};\r\n","import React, { useState } from \"react\";\nimport { lightTheme, darkTheme, GlobalStyle } from \"./themes.js\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Cursor } from \"./CustomCursor/Cursor\";\n\nconst StyledApp = styled.div`\n  display: flex;\n  margin-top: 15rem;\n  font-weight: bold;\n  align-items: center;\n  transition: all 1.5s;\n  flex-direction: column;\n  justify-content: center;\n  color: ${(props) => props.theme.fontColor};\n  font-size: ${(props) => props.theme.fontSize};\n  font-family: ${(props) => props.theme.fontFamily};\n\n  button {\n    cursor: none;\n    height: 50px;\n    width: 100px;\n    border: none;\n    outline: none;\n    font-size: 13px;\n    margin-top: 10px;\n    font-weight: bold;\n    border-radius: 20px;\n    letter-spacing: 0.1px;\n    font-family: ${(props) => props.theme.fontFamily};\n    background-color: ${(props) => props.theme.backgroundColor};\n    color: ${(props) => props.theme.fontColorButton};\n  }\n\n  i {\n    color: ${(props) => props.theme.iconColor};\n  }\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  return (\n    <>\n      <Cursor />\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <StyledApp>\n          <i className={theme === \"light\" ? \"ri-sun-fill\" : \"ri-moon-fill\"}></i>\n          Do you like light or dark theme?\n          <button onClick={() => themeToggler()}>\n            {theme === \"light\" ? \"Light\" : \"Dark\"}\n          </button>\n        </StyledApp>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}